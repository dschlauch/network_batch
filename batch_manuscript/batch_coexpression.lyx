#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble
\usepackage{cite}
\usepackage[T1]{fontenc}
\usepackage{inputenc}
\usepackage{authblk}
\usepackage{lmodern}
\author[1,2]{Daniel Schlauch} 
\author[1]{Joseph Paulson}
\author[2,3]{Kimberly Glass} 
\author[1,3]{John Quackenbush}
\affil[1]{Department of Biostatistics and Computational Biology, Dana-Farber Cancer Institute and Department of Biostatistics, Harvard TH Chan School of Public Health, Boston, MA 02115}
\affil[2]{Channing Division of Network Medicine, Brigham and Women's Hospital, Boston, MA 02115}
\affil[3]{Department of Medicine, Harvard Medical School, Boston, MA 02115}
\affil[4]{Pulmonary and Critical Care Division, Brigham and Women's Hospital and Harvard Medical School, Boston, USA}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Batch effect on covariance structure confounds gene coexpression
\end_layout

\begin_layout Abstract
Systemic biases associated with multiple batches of gene expression experiments
 have been known to confound results in differential gene expression analyses
 and numerous methods have been developed over the past 10 years that address
 this phenomenon.
 Commonly, these approaches adjust expression values such that the mean
 and variance of each gene is conditionally independent of a set of batch
 covariates.
 However, methods published to date have not addressed the potential for
 differential coexpression across batches.
 While this is of lesser concern in the context of standard differential
 gene expression, analyses that utilize a gene coexpression or correlation
 matrix will continue to see confounding due to batch effect even when applied
 to a properly batch-corrected gene expression matrix.
 In this article, we demonstrate the persistence of confounding at the covarianc
e level after standard batch correction using simulation studies and real
 biological examples.
 We present an approach for computing a corrected gene expression coexpression
 matrix, called [NAME], based on estimation of the conditional covariance
 matrix.
 [NAME] estimates a reduced set of parameters that express the coexpression
 as a function of the sample covariates and can be used to control for continuou
s and categorical confounders.
 The method is computationally fast, and makes use of the inherently modular
 structure of features commonly found in genomic analyses.
\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
High-throughput data generation, including RNA-sequencing and microarrays,
 have revolutionized molecular biology.
 These technological advancements allow for the measurement of tens of thousands
 of gene expression patterns at once, giving us a window into the molecular
 activity of living cells.
 But as promising as these data generation methods are, the deluge of data
 that has arisen from these tools has revealed an extraordinarily level
 of complexity in linking the information at the gene level to the higher
 level observations of phenotypes.
\end_layout

\begin_layout Standard
Plummeting costs have lead to increased accessibility of high-throughput
 genomic assays and with that we gain ability to investigate numerous hypotheses
 simultaneously.
 At the heart of most genomic studies is the analysis of the manner in which
 the biological variability of genomic features, such as RNA expression,
 differs in the context of phenotypes and/or other genomic features.
 We hope that understanding the joint distribution of gene expression, condition
al on phenotypes, will lead to an understanding of the core biology.
 However, it can be difficult to distinguish which associations are driven
 by real biological mechanisms and which associations are observed because
 of confounding by undesirable batch effects or other extraneous experimental
 variables.
 It is critical to address this confounding in order to reduce the probability
 of false positive results.
\end_layout

\begin_layout Standard
In the context of gene expression studies, the measurement of biological
 sources of variation RNA abundance are typically of interest.
 Commonly, observed variation is often the result of technical artifacts
 that may confound associations between experimental groups and gene expression
 
\begin_inset CommandInset citation
LatexCommand cite
key "leek2010tackling,lander1999array"

\end_inset

.
 
\end_layout

\begin_layout Standard
Batch effects are known to come from many sources.
 Some sources are obvious, such as the array platform or the experimental
 reagents used, but others may be more unexpected.
 Timing, ozone
\begin_inset CommandInset citation
LatexCommand cite
key "fare2003effects"

\end_inset

, technician and lab humidity have all been identified as sources of unwanted
 variation and undoubtedly many other sources remain undiscovered
\begin_inset CommandInset citation
LatexCommand cite
key "scherer2009batch"

\end_inset

.
 In other words, variation attributed to batch is unavoidable.
 Ideally, experimental design will allow for single-batch experiments to
 be performed, but experiments may be too large for this to be practical.
 Randomized batch assignment is recommended as an experimental design
\begin_inset CommandInset citation
LatexCommand cite
key "conesa2016survey"

\end_inset

, but many investigations involve the use of publicly available data (e.g.
 Gene Expression Omnibus, Genomics Data Commons) for which no randomization
 is possible.
\end_layout

\begin_layout Standard
A common way to approach the batch correction problem is to consider the
 model 
\begin_inset Formula $G_{ij}=\alpha_{j}+X\beta_{j}+B\gamma_{ij}+\delta_{ij}\epsilon_{ij}$
\end_inset

, where 
\begin_inset Formula $G_{ij}$
\end_inset

 is the gene expression of gene 
\begin_inset Formula $j$
\end_inset

 for sample 
\begin_inset Formula $i$
\end_inset

, 
\begin_inset Formula $X$
\end_inset

 is the design matrix, 
\begin_inset Formula $\beta_{j}$
\end_inset

 is a vector of regression coefficients for gene 
\begin_inset Formula $j$
\end_inset

 for the columns of 
\begin_inset Formula $X$
\end_inset

.
 The next two terms specify the additive and multiplicative impacts of batch.
 
\series bold

\begin_inset Formula $B$
\end_inset


\series default
 is an matrix of indicators for each of the batches, and 
\begin_inset Formula $\gamma_{j}$
\end_inset

 is a vector of additive batch effects on gene 
\begin_inset Formula $j$
\end_inset

.
 
\begin_inset Formula $\epsilon_{ij}$
\end_inset

 is the error term and 
\begin_inset Formula $\delta_{ij}$
\end_inset

 is the multiplier of that error term.
 Controlling for batch necessarily involves estimating the impact of batch
 on the mean expression and the variance of that expression, specifically
 
\begin_inset Formula $\gamma_{ij}$
\end_inset

 and 
\begin_inset Formula $\delta_{ij}$
\end_inset

, for each gene.
 It is generally not known what mechanism for batch effect is at fault for
 a particular study and consequently, it is unknown which set of genes and
 the magnitude of the effect on those genes.
 Therefore, without knowing which features are susceptible to batch effect,
 it is typical to estimate 
\begin_inset Formula $\gamma_{ij}$
\end_inset

 and 
\begin_inset Formula $\delta_{ij}$
\end_inset

 for each separately gene in a study.
 
\end_layout

\begin_layout Standard
Despite widespread literature published regarding the identification and
 control of confounding due to batch effect 
\begin_inset CommandInset citation
LatexCommand cite
key "chen2011removing,benito2004adjustment,leek2007capturing,johnson2007adjusting,nygaard2016methods"

\end_inset

, batch effect correction has focused on adjusting for the effects of batch
 on gene expression mean and variance at an individual level.
 For example, ComBat 
\begin_inset CommandInset citation
LatexCommand cite
key "johnson2007adjusting"

\end_inset

 uses an empirical bayes approach to estimate the mean and variance parameters
 for each gene and then computes an adjusted gene expression that controls
 for these effects.
 Another approach, Surrogate Variable Analysis 
\begin_inset CommandInset citation
LatexCommand cite
key "leek2007capturing"

\end_inset

, uses a combination of measured covariates and singular value decomposition
 to identify unknown sources of variation.
 These variables are estimated and their effects regressed out of the gene
 expression matrix.
 These approaches amount to a location-scale adjustment that is critical
 for promoting the conditional independence of gene expression.
 For the purposes of differential gene expression analysis, this approach
 is effective for both microarrays and RNA-seq data 
\begin_inset CommandInset citation
LatexCommand cite
key "conesa2016survey"

\end_inset

.
\end_layout

\begin_layout Standard
However, as our understanding of genomics grows, we recognize that finding
 differentially expressed genes do not give a complete picture of relationship
 between the transcriptome and phenotype.
 Cellular states involve the complex combination of numerous biological
 processes that are characterized by the behavior of large sets of interacting
 genes.
 This understanding has lead to increased interest measuring gene coexpression,
 the degree to which the expression between two gene is correlated, to gain
 an understanding of the network biology where simple differential gene
 expression falls short.
 Analogous to differential expression and complementary to network inference,
 we are naturally interested in differential coexpression - the difference
 in gene correlation across experimental conditions.
\end_layout

\begin_layout Standard
The difference between differential coexpression analysis and differential
 expression is that we focus on the pairwise joint distribution of genes
 as opposed to the marginal distribution of each gene.
 Essentially, we assume that genes that are functionally related will exhibit
 a correlated expression pattern across a set of experimental conditions
 or samples.
 A significant association may indicate a potential functional interaction.
 With this in mind, a natural goal is the identification of those genes
 that are differentially correlated.
 Gene pairs or gene sets that gain or lose a common expression pattern in
 differing experimental conditions may implicate the biological pathways
 or functional mechanisms that drive a particular phenotypic change.
\end_layout

\begin_layout Standard
Many methods have been proposed in for differential coexpression analysis,
 most commonly in the field of gene network inference.
 Many of these proposed algorithms start with the computation of a correlation
 matrix from the gene expression data
\begin_inset CommandInset citation
LatexCommand cite
key "tesson2010diffcoex,wgcna1,wgcna2,glass2013passing,southworth2009aging,choi2005differential,siska2017differential"

\end_inset

.
 There is an assumption, often implicit, that the gene expression data lacks
 heterogeneity or has heterogeneity sufficiently corrected.
 The biases that persist in the coexpression matrix when homogeneity is
 violated are rarely discussed or considered in the literature.
 Each of the methods in the field would benefit from an estimated coexpression
 matrix that has had the impact of batch effect reduced compared to a standard
 Pearson correlation matrix.
\end_layout

\begin_layout Standard
In estimating coexpression matrices, standard batch correction is critical
 
\begin_inset CommandInset citation
LatexCommand cite
key "furlotte2011mixed"

\end_inset

, but not sufficient.
 Location-scale confounding on gene expression will reduce power and bias
 results.
 This will inevitably lead to highly significant, but biologically meaningless
 associations between large volumes of genes.
 Though the common batch correction practices help mitigate this problem,
 they fail to remove the impact of the type of batch effect that causes
 differential coexpression patterns among gene.
 Current methods treat batch effect as acting on the marginal distribution
 of each gene and ignore the possibility of changes to joint distributions.
 While some impact on the joint distribution is addressed by removing the
 impact of differential means and variances across batches it is insufficient
 if the covariance itself is associated with batch.
 
\end_layout

\begin_layout Standard
It is easy to conceive of scenarios where this phenomenon plays out.
 For example, different experimental protocols across batches may induce
 a coexpression difference by preferentially sampling cells with certain
 active biological pathways for cell cycle or stress response.
 But even simpler, batch effect for coexpression may be introduced merely
 by differential biological variability.
 To illustrate this, recognize that correlation is roughly interpreted as
 the square root of proportion of variability explained by true expression
 (as opposed to other sources of error).
 Then two genes which are functionally related will only be detected as
 such if the biological variability is equal between batches.
 Subtle differences in protocol that lead to differences in biological variabili
ty can not be removed with standard batch correction methods.
\end_layout

\begin_layout Standard
The demonstration in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "simulated_example"

\end_inset

 shows two examples of uncorrected batch effect (left) impacting two genes
 in a study.
 In the top row, batch effect alters the means and variances of the two
 genes (location-scale model).
 In the bottom row, the means, variances 
\emph on
and
\emph default
 coexpression is impacted.
 Upon application of ComBat (Right) to the uncorrelated genes, the two genes
 become independent as desired.
 However, when applied to the conditionally coexpressed case (Bottom row)
 we continue to observe differential coexpression across batches.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename figures/simulated_example.png
	lyxscale 25
	width 100col%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
In this toy example, we demonstrate which artifacts standard batch correction
 is capable of correcting and which artifacts will remain.
 In A-D, we show plots of two example genes before (left) and after (right)
 correction, colored by their batch.
 In the top row (A,B), we show a comparison of two genes which are conditionally
 independent and demonstrate that location-scale batch correction appropriately
 removes the marginal dependence between the genes.
 In the bottom row (C,D), we show two genes that are conditionally coexpressed
 and illustrate that batch correction may help mitigate the measured coexpressio
n, but the resulting coexpression is still a function of the batch membership.
 Importantly, when comparing coexpression matrices, differing batch proportions
 will bias the differential coexpression.
 In simulations we demonstrate that in the absence of batched differential
 coexpression, ComBat sufficiently controls the type I error.
 However, when coexpression differs by batch, our false positive rate increases
 above the expectation of the null model.
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "simulated_example"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Though methods exist to consider the correlation of genes in the presence
 of location-scale batch effect, no method exists that further allows for
 the coexpression itself to be a function of batch.
 Similarly, no method currently available returns a corrected coexpression
 matrix rather than a corrected expression matrix.
\end_layout

\begin_layout Standard
While the impact of ignoring pairwise interactions may be negligible for
 simple differential gene expression analyses, coexpression patterns are
 widely considered in the field of network inference
\begin_inset CommandInset citation
LatexCommand cite
key "de2010differential,chen2011removing,fukushima2013diffcorr"

\end_inset

.
 The impact of confounding due to differential coexpression in batches remains
 unexamined.
\end_layout

\begin_layout Standard
In order to solve this problem, we need to create a model that describes
 the coexpression matrix as a function of the experimental conditions and
 batches.
 Classical regression models predict the expectation of a response variable,
 but in coexpression analyses, we are interested in the covariance.
 Some work has recently been published on this subject
\begin_inset CommandInset citation
LatexCommand cite
key "hoff2012covariance"

\end_inset

, but little has been studied in high dimensional or biological settings.
 
\end_layout

\begin_layout Standard
This problem faces at least two major challenges.
 The first problem is that it requires the estimation of a very large number
 of parameters.
 Given 
\begin_inset Formula $p$
\end_inset

 genes, there are 
\begin_inset Formula ${p \choose 2}$
\end_inset

 pairwise correlations, and each of these must be a function of the number
 of covariates.
 For most high throughput gene expression studies where 
\begin_inset Formula $N\ll p$
\end_inset

, we want to limit this parameter space in some way.
 Previous work has shown the increased difficulty in reproducing coexpression
 across studies
\begin_inset CommandInset citation
LatexCommand cite
key "schlauch2016estimating"

\end_inset

 likely owing to the high number of parameters to estimate in noisy data.
 Recent work has allowed for the imposition of sparsity on the gene covariance
 matrix 
\begin_inset CommandInset citation
LatexCommand cite
key "bien2011sparse"

\end_inset

 or precision matrix 
\begin_inset CommandInset citation
LatexCommand cite
key "friedman2008sparse"

\end_inset

, but the complexity of biological systems make sparsity an imperfect choice
 and computationally burdensome to implement.
 Second, in the case of numerous batches or continuous covariates, it may
 not be possible to estimate a coexpression matrix using the sample covariance
 matrix form, 
\begin_inset Formula $\frac{1}{n}\sum_{i=1}^{n}\left(X_{i}-\bar{X}\right)\left(X_{i}-\bar{X}\right)^{T}$
\end_inset

, where 
\begin_inset Formula $X_{i}$
\end_inset

 is the set of all gene expression values for sample 
\begin_inset Formula $i$
\end_inset

.
 
\end_layout

\begin_layout Standard
In the method we describe here, [NAME], we reduce the parameter space by
 exploiting the modular nature of gene expression, estimating only 
\begin_inset Formula $N$
\end_inset

 variables for each covariate, with each weight corresponding to a eigenvector.
 This collects the information from many similarly expressed genes by effectivel
y borrowing information from similarly patterned features.
 This allows us to estimate gene coexpression matrix as a function of sample
 covariates.
 Our method is presented in a regression framework that allows for the inclusion
 of continuous and categorical covariates into the adjustment model.
\end_layout

\begin_layout Section
Methods
\end_layout

\begin_layout Subsection
Approach
\end_layout

\begin_layout Standard
In this manuscript we present a method for estimating the coexpression matrix
 by modeling the matrix as a function of the largest components of variation.
 Critical to our approach is the idea that although there are 
\begin_inset Formula ${p \choose 2}$
\end_inset

 pairwise gene-gene relationships, the true biology can be predominantly
 explained by a much smaller set of variance components.
 One way to identify these components is to compute the eigendecomposition
 of the gene correlation matrix.
 We can then write the coexpression matrix as a function of the experimental
 covariates and these eigenvectors.
 Solving this formulation by minimizing the squared error will yield a set
 of parameter estimates from which we can compute corrected coexpression
 estimates.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/dan/gd/Harvard/Research/network_batch/overview2.pdf
	lyxscale 40
	width 100col%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout

\series bold
Workflow of [NAME]
\series default
.
 [NAME] begins with a raw or normalized gene expression dataset.
 (1) Standard batch correction (ComBat) is applied to remove location-scale
 batch effect.
 (2) The overall coexpression matrix is calculated.
 (3) An eigendecomposition of the overall coexpression matrix is computed.
 The eigenvectors from this decomposition are then used to re-estimate 
\begin_inset Quotes eld
\end_inset

pseudo-eigenvalues
\begin_inset Quotes erd
\end_inset

 that minimize the coexpression error from the batch corrected expression
 data.
 (4) Fitted values obtained from this estimation, in combination with the
 eigenvector matrix, 
\begin_inset Formula $\mathbf{Q}$
\end_inset

, are used to estimated covariate-dependent coexpression matrices such as
 for batch corrected network inference or differential coexpression analysis.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Consider a set of 
\begin_inset Formula $N$
\end_inset

 samples with 
\begin_inset Formula $q$
\end_inset

 covariates measuring gene expression across 
\begin_inset Formula $p$
\end_inset

 genes.
 Let 
\begin_inset Formula $\textbf{x}_{i}=(x_{i1},\dots,x_{iq})$
\end_inset

 denote the covariates for sample 
\begin_inset Formula $i$
\end_inset

 and let 
\begin_inset Formula $\textbf{g}_{i}=(g_{i1},\dots,g_{ip})$
\end_inset

 denote the gene expression values for sample 
\begin_inset Formula $i$
\end_inset

 for the 
\begin_inset Formula $p$
\end_inset

 genes.
\end_layout

\begin_layout Standard
In multivariate regression form we can express this as 
\begin_inset Formula 
\[
\textbf{g}_{i}=\mathbf{\beta}^{T}\textbf{x}_{i}+\mathbf{\epsilon}_{i}\text{ for }i=1,\dots,N
\]

\end_inset

 where 
\begin_inset Formula $\mathbf{\beta}$
\end_inset

 is a 
\begin_inset Formula $q\times p$
\end_inset

 matrix of coefficients.
\end_layout

\begin_layout Standard
Equivalently,
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\textbf{G}=\textbf{X}\mathbf{\beta}+\mathbf{E}
\]

\end_inset


\end_layout

\begin_layout Standard
where 
\begin_inset Formula $\textbf{G}$
\end_inset

, 
\begin_inset Formula $\textbf{X}$
\end_inset

, and 
\begin_inset Formula $\textbf{E}$
\end_inset

 are each matrices with row 
\begin_inset Formula $i$
\end_inset

 corresponding to 
\begin_inset Formula $\textbf{g}_{i}$
\end_inset

, 
\begin_inset Formula $\mathbf{x}_{i}$
\end_inset

, and 
\begin_inset Formula $\mathbf{\epsilon}_{i}$
\end_inset

 respectively.
\end_layout

\begin_layout Standard
Here, we make the usual multivariate assumption for 
\begin_inset Formula $\textbf{E}$
\end_inset

 that the rows 
\begin_inset Formula $\mathbf{\epsilon}_{i},\dots,\mathbf{\epsilon}_{N}$
\end_inset

 are conditionally independent, and follow distribution, 
\begin_inset Formula $MVN_{p}(\mathbf{0}_{p},\Sigma_{i})$
\end_inset

.
 Notably in this paper, the covariance of 
\begin_inset Formula $\mathbf{\epsilon}_{i}$
\end_inset

 differ according to 
\begin_inset Formula $i$
\end_inset

.
\end_layout

\begin_layout Standard
Estimating the covariance structure for a set of 
\begin_inset Formula $p$
\end_inset

 genes typically involves computing the sample covariance matrix, 
\begin_inset Formula $S$
\end_inset

, with entries 
\begin_inset Formula $s_{jk}=\frac{1}{N-1}\sum_{i=1}^{N}(G_{ij}-\bar{G_{\cdot j}})(G_{ik}-\bar{G_{\cdot k}})$
\end_inset

.
 However, as is typical in high-throughput settings, 
\begin_inset Formula $p\gg N$
\end_inset

, producing an estimated covariance matrix 
\begin_inset Formula $p\times p$
\end_inset

 with column rank 
\begin_inset Formula $\le N$
\end_inset

.
\end_layout

\begin_layout Standard
To address this "curse of dimensionality", numerous methods have been proposed.
 One might use a series of LASSO regressions to estimate parameters in the
 inverse covariance matrix 
\begin_inset CommandInset citation
LatexCommand cite
key "meinshausen2006high"

\end_inset

, or perform penalized maximum likelihood estimation with the penalty on
 the inverse covariance matrix 
\begin_inset CommandInset citation
LatexCommand cite
key "banerjee2008model,yuan2007model,friedman2008sparse"

\end_inset

.
 Each of these approaches imposes sparsity on the precision matrix, effectively
 assuming a large degree of conditional independence between genes.
 More recent work has explored imposing sparsity on the covariance matrix
 itself, rather than the precision matrix 
\begin_inset CommandInset citation
LatexCommand cite
key "bien2011sparse"

\end_inset

, which allows us to assume widespread marginal independence of genes.
 
\end_layout

\begin_layout Standard
The approach we take here involves estimating a covariance matrix 
\begin_inset Formula $\Sigma_{i}$
\end_inset

 which depends on the batch and experimental design features of sample 
\begin_inset Formula $i$
\end_inset

.
 An estimate of 
\begin_inset Formula $\Sigma_{i}$
\end_inset

 that allows all elements of the matrix to vary freely can be obtained by
 separately estimating the covariance matrix for each unique row of 
\begin_inset Formula $\mathbf{X}$
\end_inset

.
 However, this approach in impractical for a large number of categorical
 covariates or any continuous covariates.
 Additionally, it neglects the information in other samples and other genes
 which can be used to gain a better estimate of the coexpression.
 Given that groups of genes often behave in distinct patterns, it is inefficient
 to estimate coexpression values for every pairwise combination of genes.
\end_layout

\begin_layout Standard
Instead, we approach the problem by making use of the fact that genes commonly
 behave in coexpressed modules, and that the dimensional space is effectively
 much smaller than 
\begin_inset Formula $p^{2}$
\end_inset

.
 To do this, we decompose the gene expression correlation matrix and find
 a set of eigenvectors which explain the variation.
 We then attempt to infer a diagonal matrix of 
\begin_inset Quotes eld
\end_inset

pseudo-eigenvalues
\begin_inset Quotes erd
\end_inset

, which minimize the square error.
 This procedure allows us to reduce the parameter space from 
\begin_inset Formula $p^{2}$
\end_inset

 to 
\begin_inset Formula $p$
\end_inset

 or less while still considering the bulk of the variability in the data.
 Furthermore, in the application to the gene expression data, the column
 rank of the coexpression matrix will be 
\begin_inset Formula $N-1$
\end_inset

, and the number of non-zero eigenvalues will also be only 
\begin_inset Formula $N-1$
\end_inset

.
 Therefore, we need only estimate the parameters corresponding to eigenvectors
 with non-zero eigenvalues substantially reducing the parameter space from
 
\begin_inset Formula $p$
\end_inset

 to 
\begin_inset Formula $N-1$
\end_inset

.
\end_layout

\begin_layout Standard
Formally, for 
\begin_inset Formula $\Sigma_{i}$
\end_inset

 we estimate 
\begin_inset Formula $\Sigma_{i}=\mathbf{Q}\mathbf{\Lambda}_{i}\mathbf{Q}^{T}$
\end_inset

, where 
\begin_inset Formula $\mathbf{Q}$
\end_inset

 is held constant as the set of eigenvectors from the full coexpression
 matrix.
 In this formulation,
\begin_inset Formula $\mathbf{\Lambda}_{i}$
\end_inset

 is a diagonal matrix with entries 
\begin_inset Formula 
\begin{equation}
\mathbf{\Lambda}_{i,kk}=\mathbf{x}_{i}\mathbf{\Psi}_{\cdot k}\label{eq:Lambda_diag}
\end{equation}

\end_inset

 where 
\begin_inset Formula $\mathbf{x}_{i}$
\end_inset

 is the predictors for sample 
\begin_inset Formula $i$
\end_inset

 and
\begin_inset Formula $\mathbf{\Psi}$
\end_inset

 is a 
\begin_inset Formula $p\times q$
\end_inset

 matrix of coefficients.
 
\end_layout

\begin_layout Standard
Because we don't estimate the pseudo-eigenvalues after 
\begin_inset Formula $k=N-1$
\end_inset

, we set 
\begin_inset Formula $\mathbf{\Psi}_{\cdot k}=\text{\mathbf{0}}_{q}$
\end_inset

 for all 
\begin_inset Formula $k\ge N$
\end_inset

.
 
\end_layout

\begin_layout Standard
Intuitively, we can think of the parameter matrix 
\begin_inset Formula $\mathbf{\Psi}$
\end_inset

 as adjusting the eigenvalues as a function of the covariates to minimize
 the coexpression error.
 It is straightforward to show that in the case of a single batch and no
 experimental conditions, i.e.
 
\begin_inset Formula $\mathbf{x}_{i}=1$
\end_inset

 for all 
\begin_inset Formula $i\in N$
\end_inset

, then
\begin_inset Formula $\mathbf{\Psi}$
\end_inset

 becomes identical to the vector of eigenvalues from the original covariance
 matrix.
\end_layout

\begin_layout Subsection
Likelihood function
\end_layout

\begin_layout Standard
The likelihood function for a multivariate normal with mean 
\begin_inset Formula $\mathbf{\mu}$
\end_inset

 and variance-covariance 
\begin_inset Formula $\Sigma$
\end_inset

 is 
\begin_inset Formula 
\[
\mathcal{L}\left(\mu,\Sigma\right)=\prod_{i=1}^{N}\frac{1}{\left(2\pi\right)^{\frac{p}{2}}|\Sigma_{i}|^{\frac{1}{2}}}e^{-\frac{1}{2}\left(\mathbf{G}_{i}-\mu\right)^{T}\Sigma_{i}^{-1}\left(\mathbf{G}_{i}-\mu\right)}
\]

\end_inset


\end_layout

\begin_layout Standard
The maximum likelihood estimation of 
\begin_inset Formula $\mathbf{\mu}$
\end_inset

 is simply the vector 
\begin_inset Formula $\mathbf{\bar{g}}=\frac{\sum_{i=1}^{N}\mathbf{g}_{i}}{N}$
\end_inset

 and since 
\begin_inset Formula $\mathbf{\mu}$
\end_inset

 is independent of 
\begin_inset Formula $\Sigma$
\end_inset

 we can subtract off the row means, yielding 
\begin_inset Formula $\mathbf{G}_{i}^{*}=\mathbf{G}_{i}-\mathbf{\bar{g}}$
\end_inset

.
 And plugging in our index dependent covariance matrix from equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:Lambda_diag"

\end_inset

 we have
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\mathcal{L}\left(\mathbf{\gamma}\right)=\prod_{i=1}^{N}\frac{1}{\left(2\pi\right)^{\frac{p}{2}}|\mathbf{Q}\text{diag}\left(\mathbf{x}_{i}\Psi\right)\mathbf{Q}^{T}|^{\frac{1}{2}}}e^{-\frac{1}{2}\left(\mathbf{G}_{i}^{*}\right)^{T}\left(\mathbf{Q}\text{diag}\left(\mathbf{x}_{i}\Psi\right)\mathbf{Q}^{T}\right)^{-1}\left(\mathbf{G}_{i}^{*}\right)}
\]

\end_inset

where 
\begin_inset Formula $\text{diag}\left(\mathbf{x}_{i}\Psi\right)$
\end_inset

 is defined as a matrix with 0's in all off-diagonal entries and diagonal
 equal to 
\begin_inset Formula $\mathbf{x}_{i}\Psi$
\end_inset

.
\end_layout

\begin_layout Subsection
Estimator
\end_layout

\begin_layout Standard
In estimating the parameters in the matrix 
\begin_inset Formula $\Psi$
\end_inset

, we may consider that each row, 
\begin_inset Formula $i$
\end_inset

, of 
\begin_inset Formula $\Psi$
\end_inset

 corresponds to the vector of contributions from the 
\begin_inset Formula $i^{th}$
\end_inset

 eigenvector of 
\begin_inset Formula $\mathbf{Q}$
\end_inset

.
 With 
\begin_inset Formula $\mathbf{Q}_{i}$
\end_inset

 specifying the 
\begin_inset Formula $i^{th}$
\end_inset

 column of 
\begin_inset Formula $\mathbf{Q}$
\end_inset

 we have that 
\begin_inset Formula $\mathbf{Q}_{i}^{T}\mathbf{Q}_{j}=0$
\end_inset

 for all 
\begin_inset Formula $i\ne j$
\end_inset

 and 
\begin_inset Formula $\mathbf{Q}_{i}^{T}\mathbf{Q}_{i}=1$
\end_inset

 for all 
\begin_inset Formula $i,j\in1,2,\dots p$
\end_inset

.
\end_layout

\begin_layout Standard
For some 
\begin_inset Formula $h\in1,2,\dots p$
\end_inset

, we seek to find the estimates 
\begin_inset Formula $\hat{\Psi}_{h}$
\end_inset

 which minimize the squared error of the estimated correlation matrices
 defined as 
\begin_inset Formula $\mathbf{G}_{i}\mathbf{G}_{i}^{T}$
\end_inset

 for each sample 
\begin_inset Formula $i\in1,2,\dots,N$
\end_inset

.
 By the Orthogonal Decomposition Theorem, the 
\begin_inset Quotes eld
\end_inset

error residuals
\begin_inset Quotes erd
\end_inset

 
\begin_inset Formula $\mathbf{Q}_{h}^{T}\left[\mathbf{G}_{i}\mathbf{G}_{i}^{T}-\mathbf{Q}_{h}\mathbf{X}_{i}\hat{\Psi}_{h}\mathbf{Q}_{h}^{T}\right]\mathbf{Q}_{h}$
\end_inset

 will be minimized when they are orthogonal to the hyperplane spanned by
 
\begin_inset Formula $\mathbf{X}$
\end_inset

.
 Therefore, we can set the product below (Equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:least_squares_zero"

\end_inset

) equal to the zero vector to solve for our estimator 
\begin_inset Formula $\hat{\Psi}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align}
\mathbf{0}_{q} & =\sum_{i=1}^{N}\mathbf{X}_{i}^{T}\left[\mathbf{Q}_{h}^{T}\left[\mathbf{G}_{i}\mathbf{G}_{i}^{T}-\mathbf{Q}_{h}\mathbf{X}_{i}\hat{\Psi}_{h}\mathbf{Q}_{h}^{T}\right]\mathbf{Q}_{h}\right]\label{eq:least_squares_zero}\\
\mathbf{0}_{q} & =\sum_{i=1}^{N}\left[\mathbf{X}_{i}^{T}\mathbf{Q}_{h}^{T}\mathbf{G}_{i}\mathbf{G}_{i}^{T}\mathbf{Q}_{h}-\mathbf{X}_{i}^{T}\mathbf{Q}_{h}^{T}\mathbf{Q}_{h}\mathbf{X}_{i}\hat{\Psi}_{h}\mathbf{Q}_{h}^{T}\mathbf{Q}_{h}\right]\nonumber \\
\mathbf{0}_{q} & =\sum_{i=1}^{N}\left[\mathbf{X}_{i}^{T}\mathbf{Q}_{h}^{T}\mathbf{G}_{i}\mathbf{G}_{i}^{T}\mathbf{Q}_{h}-\mathbf{X}_{i}^{T}\mathbf{X}_{i}\hat{\Psi}_{h}\right]\nonumber \\
\sum_{i=1}^{N}\left[\mathbf{X}_{i}^{T}\mathbf{X}_{i}\right]\hat{\Psi}_{h} & =\sum_{i=1}^{N}\left[\mathbf{X}_{i}^{T}\mathbf{Q}_{h}^{T}\mathbf{G}_{i}\mathbf{G}_{i}^{T}\mathbf{Q}_{h}\right]\nonumber \\
\mathbf{X}^{T}\mathbf{X}\hat{\Psi}_{h} & =\sum_{i=1}^{N}\left[\mathbf{X}_{i}^{T}\mathbf{Q}_{h}^{T}\mathbf{G}_{i}\mathbf{G}_{i}^{T}\mathbf{Q}_{h}\right]\nonumber \\
\hat{\Psi}_{h} & =\left(\mathbf{X}^{T}\mathbf{X}\right)^{-1}\sum_{i=1}^{N}\left[\mathbf{X}_{i}^{T}\mathbf{Q}_{h}^{T}\mathbf{G}_{i}\mathbf{G}_{i}^{T}\mathbf{Q}_{h}\right]\label{eq:estimator}\\
\hat{\Psi} & =\left(\mathbf{X}^{T}\mathbf{X}\right)^{-1}\sum_{i=1}^{N}\left[\mathbf{X}_{i}^{T}\mathbf{Q}^{T}\mathbf{G}_{i}\mathbf{G}_{i}^{T}\mathbf{Q}\right]\nonumber 
\end{align}

\end_inset

Equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:estimator"

\end_inset

 provides an estimate for 
\begin_inset Formula $\Psi_{h}$
\end_inset

, a 
\begin_inset Formula $q$
\end_inset

-vector specifying the contribution of eigenvector 
\begin_inset Formula $h$
\end_inset

 and the 
\begin_inset Formula $q$
\end_inset

 covariates to the correlation structure in the 
\begin_inset Formula $N$
\end_inset

 samples.
\end_layout

\begin_layout Standard
The estimate 
\begin_inset Formula $\hat{\Psi}$
\end_inset

 represents the least squares estimate for 
\begin_inset Formula $\Psi$
\end_inset

, which is equivalent to the maximum likelihood estimate under normal error.
 Given the generous assumption of a properly specified model, this estimate
 will be the most efficient estimator and will asymptotically converge to
 the true parameter 
\begin_inset Formula $\Psi$
\end_inset

.
\end_layout

\begin_layout Standard
This provides a closed form solution to our problem.
 Given that the computationally intensive steps involve matrix inversion,
 the computational complexity is 
\begin_inset Formula $\mathcal{O}(n^{3})$
\end_inset

 or less, depending on the specific implementation.
 This allows for relatively fast computation of corrected coexpression matrix
 that is comparable to the simple Pearson correlation computation, which
 has similar complexity.
 Using a computer with Intel(R) Core(TM) i7-3630QM CPU @ 2.40GHz, and Microsoft
 R Open 3.2.5 linked with multi-threaded BLAS/LAPACK libraries, the R implementati
on of this method finished in 8.8 seconds on a dataset of 4000 genes, 400
 samples and 2 covariates.
 
\end_layout

\begin_layout Subsection
Corrected covariance matrix
\end_layout

\begin_layout Standard
With the estimates obtained with our method, it is straightforward to see
 how fitted values for the covariance matrix for each sample or experimental
 condition can be obtained.
 Using the usual interpretations of .
 Given an estimate for 
\begin_inset Formula $\Psi$
\end_inset

, 
\begin_inset Formula $\hat{\Psi}$
\end_inset

, we can now estimate the batch-independent covariance structure as 
\begin_inset Formula 
\begin{equation}
\hat{\mathbf{S}}=\mathbf{Q}diag\left(\bar{\mathbf{x}}\hat{\Psi}\right)\mathbf{Q}^{T}\text{ or }\hat{\mathbf{S}}=\sum_{i=1}^{p}\bar{\mathbf{x}}\hat{\Psi}_{i}\mathbf{Q}_{i}\mathbf{Q}_{i}^{T}\label{eq:corrected_coexpression}
\end{equation}

\end_inset

 where 
\begin_inset Formula $\bar{\mathbf{x}}$
\end_inset

 is a 
\begin_inset Formula $q$
\end_inset

-vector specifying the column means of 
\begin_inset Formula $\bar{\mathbf{x}}$
\end_inset

,
\begin_inset Formula 
\[
\bar{\mathbf{x}}=\frac{\sum_{i=1}^{N}\mathbf{x}_{i}}{N}
\]

\end_inset


\end_layout

\begin_layout Standard
The differential coexpression matrix between two conditions, defined in
 binary as column 2 of 
\begin_inset Formula $\mathbf{X}$
\end_inset

, is computed
\begin_inset Formula 
\begin{equation}
\hat{\mathbf{W}}=\mathbf{Q}diag\left(\mathbf{v}\hat{\Psi}\right)\mathbf{Q}^{T}\label{eq:parameter_interpretation}
\end{equation}

\end_inset

where 
\begin_inset Formula $\mathbf{v}=\left(0,1,0,\dots0\right)_{q}$
\end_inset


\end_layout

\begin_layout Section
Results
\end_layout

\begin_layout Subsection
Simulations demonstrate residual coexpression batch effect after ComBat
\end_layout

\begin_layout Standard
To illustrate the presence of batch effect in purportedly corrected gene
 expression data, we performed an extremely simple simulation to capture
 the effect.
 We simply took a gene expression dataset of 100 samples and selected 1000
 genes at random to be in batch 1 and labeled them 
\begin_inset Formula $SimulatedGene1,\dots,SimulatedGene1000$
\end_inset

.
 We sampled another set of 1000 genes and assigned them to batch 2, and
 added that data to 
\begin_inset Formula $SimulatedGene1,\dots,SimulatedGene1000$
\end_inset

.
 In essence, for each 
\begin_inset Quotes eld
\end_inset

simulated
\begin_inset Quotes erd
\end_inset

 gene, there were 200 total expression observations - 100 from one gene
 and 100 from a separate gene.
 Naturally, there was substantial association with batch across the dataset.
 This is seen in the highly significant differential expression across batches.
 We also compared the differential coexpression across batches by plotting
 the distribution of differential coexpression estimates between batch1
 and batch 2.
 We compared this distribution to that of two randomly assigned groups to
 show that the absolute differential coexpression was much greater across
 batches.
\end_layout

\begin_layout Standard
We then applied ComBat to the data, removing the effect of the batch assignment
 and performed the above assessments again.
 As expected, the differentially expressed genes virtually disappeared.
 Interestingly, the differential coexpression was only mildly reduced.
 Substantially more gene-pairs were highly coexpressed across batch-groups
 than across random-groups.
 This simple demonstration illustrates both the value of ComBat in addressing
 location-scale batch effect and the need for methods which address batch
 structure.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\series bold
A
\series default

\begin_inset Graphics
	filename /home/dan/gd/Harvard/Research/network_batch/figures/demo_diffexpress.pdf
	width 90col%

\end_inset


\end_layout

\begin_layout Plain Layout

\series bold
B
\series default

\begin_inset Graphics
	filename /home/dan/gd/Harvard/Research/network_batch/figures/demo_diff_coex_density.pdf
	width 90col%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Simulations demonstrate ComBat on differential expression and coexpression.
 The impact of ComBat on differential expression relative to differential
 coexpression was evaluated using an illustrative example.
 A dataset was generated for 1000 genes using real data, but with batch
 effect induced via the replacement of half of each gene's expression values.
 This rewiring created substantial differential expression and coexpression,
 but only the differential expression was addressed completely with ComBat,
 highlighting the need for additional methods to address this problem.
 
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "demo_plots"

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\emph on
In Silico
\emph default
 analysis
\end_layout

\begin_layout Standard
We performed a simulation study to determine the relative performance of
 our method in identifying differential coexpression in the presence of
 coexpression batch effect.
 Gene expression for 400 samples were simulated across 4,000 genes.
 The simulation study contained a balance Cases/Control design with 200
 samples per group.
 Similarly, 
\begin_inset Quotes eld
\end_inset

Batch A
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

Batch B
\begin_inset Quotes erd
\end_inset

 were each assigned 200 samples.
 To generate an unbalanced batch effect, 150/200 samples in Batch A were
 control group samples, whereas 150/200 samples in Batch B were cases.
 
\end_layout

\begin_layout Standard
Each gene was randomly assigned to one of 10 distinct modules, labeled A-J.
 Modules A,B were labeled as background modules with the coexpression pattern
 present in all samples, Module C was present in all Batch A samples, Module
 D was present in all Batch B samples, Module E was present in controls,
 Module F and G were present in cases.
 The coexpression pattern of all other modules were present in no samples.
 Within each module each gene was assigned a continuous value, 
\begin_inset Formula $\gamma_{i}$
\end_inset

, uniformly random between 
\begin_inset Formula $-a$
\end_inset

 and 
\begin_inset Formula $a$
\end_inset

.
 For case/control modules, 
\begin_inset Formula $a$
\end_inset

 was chosen to be 
\begin_inset Formula $\sqrt{0.1}$
\end_inset

 and for all other modules 
\begin_inset Formula $a$
\end_inset

 was set at 
\begin_inset Formula $\sqrt{0.2}$
\end_inset

.
 The true coexpression between any two genes was defined as 
\begin_inset Formula $\rho_{i,j}=\gamma_{i}\gamma_{j}$
\end_inset

.
 This yielded within module correlation values in the range 
\begin_inset Formula $\left(-0.1,0.1\right)$
\end_inset

 for cases/controls and 
\begin_inset Formula $\left(-0.2,0.2\right)$
\end_inset

 for batch and background modules.
 The average absolute correlation between two case-control coexpressed genes
 was 
\begin_inset Formula $\rho=0.025$
\end_inset

 with 
\begin_inset Formula $R^{2}=0.000625$
\end_inset

.
 The average absolute correlation between two batch or background coexpressed
 genes was 
\begin_inset Formula $\rho=0.05$
\end_inset

 with 
\begin_inset Formula $R^{2}=0.0025$
\end_inset

.
 
\end_layout

\begin_layout Standard
The simulated study was run by generating 400 samples from a multivariate
 normal distribution with 0-vector mean and covariance equal to the correlation
 matrix described above for each sample.
\end_layout

\begin_layout Standard
The eigenvectors obtained demonstrate the tendency to isolate distinct gene
 modules.
 Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Eigenvector_plots"

\end_inset

 shows this feature along with the pseudo-eigenvalue contribution of each
 covariate.
 It is important to note that the top eigenvectors do not necessarily identify
 genes of interest in the case/control context.
 The estimate 
\begin_inset Formula $\hat{\Psi}$
\end_inset

 is a 
\begin_inset Formula $3\times p$
\end_inset

 matrix with the first 20 columns plotted in (Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Eigenvector_plots"

\end_inset

B).
 The 
\begin_inset Formula $i^{th}$
\end_inset

 column and 
\begin_inset Formula $j^{th}$
\end_inset

 row can be interpreted as the additional contribution of the 
\begin_inset Formula $i^{th}$
\end_inset

 eigenvector for a 1 unit increase in the value of the 
\begin_inset Formula $j^{th}$
\end_inset

 variable.
 This is analogous to standard regression, where we can identify the estimated
 mean differences associated with a change in a predictor.
 To identify differential coexpression for the 
\begin_inset Formula $j^{th}$
\end_inset

 variable, such as case/control, controlling for batch we need only examine
 the values that deviate significantly from zero.
 The parameter corresponding to the case/control variable successfully finds
 the eigenvectors which best describe the genes differentially coexpressed
 across cases/controls.
\end_layout

\begin_layout Standard
We evaluated the ability of [NAME] to capture case/control differential
 coexpression relative to batch coexpression and background coexpression
 (Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:insilico_results"

\end_inset

).
 For 4,000 genes there are 7,998,000 pairwise coexpression estimates of
 which 319,600 (4%) are considered case/control gene-pairs, and 159,600
 (2%) are considered batch
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{center}
\end_layout

\begin_layout Plain Layout


\backslash
includegraphics[height=8cm]{../figures/InSilico_8Error_2Batch_UniformEffects_400sa
mples_4000genes_5955_repeated/EigenvectorPlots.png}
\end_layout

\begin_layout Plain Layout


\backslash
end{center}
\end_layout

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Eigenvector plots.
 [NAME] is designed to estimate sample specific coexpression as a function
 of the sample covariates and the overall coexpression eigenvectors.
 
\series bold
(A)
\series default
 Here we see the top six eigenvectors plotted for all 4000 genes.
 Each point is colored according to that gene's membership in a batch, case/cont
rol or background module.
 We see that the eigenvectors tend to separate along with coexpression modules.
 
\series bold
(B)
\series default
 Pseudo-eigenvalues for the top 20 eigenvectors corresponding to the three
 covariates (intercept, batch, case/control).
 Deviations from zero on the y-axis are indications of an unequal contribution
 of the corresponding eigenvector to the fitted coexpression estimate.
 Note that eigenvectors 5 and 6 have notable non-zero pseudo-eigenvalues
 corresponding to case/control parameter.
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:Eigenvector_plots"

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{center}
\end_layout

\begin_layout Plain Layout


\backslash
includegraphics[height=4cm]{../figures/InSilico_8Error_2Batch_UniformEffects_400sa
mples_4000genes_5955_repeated/NaiveDensity.png}
\end_layout

\begin_layout Plain Layout


\backslash
includegraphics[height=4cm]{../figures/InSilico_8Error_2Batch_UniformEffects_400sa
mples_4000genes_5955_repeated/ourMethodDensity.png}
\end_layout

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
includegraphics[height=3cm]{../figures/InSilico_8Error_2Batch_UniformEffects_400sa
mples_4000genes_5955_repeated/OursVsNaive.png}
\end_layout

\begin_layout Plain Layout


\backslash
includegraphics[height=3cm]{../figures/InSilico_8Error_2Batch_UniformEffects_400sa
mples_4000genes_5955_repeated/OursVsOthersROC.png}
\end_layout

\begin_layout Plain Layout


\backslash
end{center}
\end_layout

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout

\emph on
In Silico
\emph default
 Results.
 Fitted differential coexpression scores for standard differential coexpression
 (upper left) vs [NAME] (upper right) separated by true relationship.
 Pearson difference failed to generate much power to predict true coexpression
 compared to background and found batch effect at approximately the same
 rate as true effect.
 [NAME] found true effects at vastly superior rates compared to both background
 and batch effect.
 The predicted scores of non-background genes for Pearson difference (x-axis)
 vs [NAME] (y-axis) demonstrate improved ability to separate case/control
 effects (orange) from batch effects (black).
 ROC curves show the relative performance in identifying case/control genes
 compared to background genes (left) and batch genes (right).
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:insilico_results"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
ComBat-corrected expression data still contains batch-associated coexpression
 in ENCODE
\end_layout

\begin_layout Standard
Above, we outline a theoretical basis for adjusting for differential coexpressio
n by batch.
 In short, we demonstrate how this particular form of batch-effect could,
 in theory, lead to reduced power and biased results.
 However, it remains to be seen whether this purported phenomenon actually
 occurs in real gene expression datasets.
 One might hope that the impact of batch on gene expression data occurs
 on each gene independently, altering the distribution of expression within
 each batch.
 In that scenario, existing approaches would be sufficient for removal of
 batch effect and batch-associated differential coexpression would be virtually
 absent.
 
\end_layout

\begin_layout Standard
To demonstrate that differential coexpression by batch exists in the wild,
 we selected publicly available data from the ENCODE project.
 This dataset (GSE19480) contains 153 RNA-seq samples across 57820 ENSEMBL
 IDs from lymphoblastoid cell lines obtained from Yoruban HapMap individuals.
 Reads were aligned using Bowtie 
\begin_inset CommandInset citation
LatexCommand cite
key "langmead2009ultrafast"

\end_inset

, and counts were produced using 
\emph on
featureCounts 
\emph default
from the 
\emph on
Subread
\emph default
 program
\begin_inset CommandInset citation
LatexCommand cite
key "liao2014featurecounts"

\end_inset

.
 Replicates were removed, yielding samples from 63 individuals who were
 each sequenced at both the Yale University and Argonne National Laboratory
 (126 samples in total).
 Both centers used the Illumina Genome Analyzer II, which helps reduce,
 but is known to not eliminate, batch effect.
 These two centers represent the two batches to consider for correction.
 Since each batch contains RNA-seq experiments on the same group of 63 individua
ls, one would hope that in the absence of batch effect (or in the presence
 of satisfactory batch correction) that there would be minimal differential
 expression and coexpression between the batches.
\end_layout

\begin_layout Standard
We first ran LIMMA on the uncorrected data between Yale and Argonne and
 observed 495 significant (FDR<.01) genes (Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "ENCODE"

\end_inset

A).
 We then applied ComBat to the data with Yale/Argonne as the batch.
 ComBat uses an empirical bayes approach to make location/scale adjustments
 for each gene, returning a gene expression matrix of corrected values.
 We then reran LIMMA using the same Center partition and observed 43 (FDR<.01)
 significant genes.
 Unsurprisingly, this procedure removed the differential expression across
 batches which is critical from the removal of confounding effects in differenti
al expression.
 
\end_layout

\begin_layout Standard
Next we examined the distribution of differential coexpression between the
 two batches (Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "ENCODE"

\end_inset

B).
 We also generated null distributions by randomly swapping the two centers
 for each of the 63 individuals 1000 times.
 Interestingly, despite the absence of differential expression across batches,
 differential coexpression persists after batch correction.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout

\series bold
A
\series default

\begin_inset Graphics
	filename /home/dan/gd/Harvard/Research/network_batch/figures/encode_diffexpress.pdf
	width 90col%

\end_inset


\begin_inset Newline newline
\end_inset


\series bold
B
\series default

\begin_inset Graphics
	filename /home/dan/gd/Harvard/Research/network_batch/figures/encode_diff_coex_density.pdf
	width 90col%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Differential expression and absolute differential coexpression in ENCODE
 data with batch correction.
 ComBat effectively mitigates the differential expression between samples
 run in two separate centers (
\series bold
A
\series default
).
 However, with this same batch correction, differential coexpression continues
 to be strongly influenced by processing center.
 The lower plot (
\series bold
B
\series default
) shows the distribution of differential coexpression when comparing groups
 that are randomly assigned (grey) compared to assignments based on batch.
 Despite the fact that ComBat helps mitigate differential expression between
 batches, these results show that batch-associated differential coexpression
 remains uncorrected.
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "ENCODE"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
[NAME] allows for separation of covariate specific modules with WGCNA in
 COPDGene study
\end_layout

\begin_layout Standard
Weighted Gene Coexpression Network Analysis (WGCNA) is one of the most popular
 network reconstruction methods in use today 
\begin_inset CommandInset citation
LatexCommand cite
key "wgcna1"

\end_inset

, with 1730 citations as of March 31, 2017.
 It's use continues to grow with 140 citations in the first 3 months of
 2017.
 Like many other methods in the field, WGCNA begins with a standard Pearson
 correlation matrix of gene expression data.
 We were interested in whether the use of [NAME] could provide covariate-specifi
c differential coexpression estimates that could integrate with WGCNA to
 find functionally relevant coexpression modules.
 While our method is motivated by the idea of removing batch, it is general
 enough to be applied to any confounding variable.
 In this application, we chose to treat sex as a confounder because it is
 clearly labeled, dichotomous, and likely to impart some coexpression bias
 on the study due to sexual dimorphism.
\end_layout

\begin_layout Standard
Gene expression data from the ECLIPSE study (GSE54837)
\begin_inset CommandInset citation
LatexCommand cite
key "singh2014altered"

\end_inset

 was collected using blood samples from 226 subjects classified as non-smokers
 (6), smoker controls (84) or COPD (136).
 Blood samples from each individual were profiled using Affymetrix Human
 Genome U133 Plus 2.0 microarrays.
 CEL data files from these assays were RMA-normalized
\begin_inset CommandInset citation
LatexCommand cite
key "irizarry2003exploration"

\end_inset

 in R using the BioConductor package 'affy' 
\begin_inset CommandInset citation
LatexCommand cite
key "gautier2004affy"

\end_inset

.
 Array probes were collapsed to 19,765 Entrez-gene IDs using a custom CDF
\begin_inset CommandInset citation
LatexCommand cite
key "dai2005evolving"

\end_inset

 and the 220 samples for COPD or smoker control subjects were retained for
 analysis.
 
\end_layout

\begin_layout Standard
Previous work applying WGCNA to this data has identified network modules
 associated with COPD diagnosis
\begin_inset CommandInset citation
LatexCommand cite
key "morrow2015identifying,morrow2017functional"

\end_inset

.
 These studies involved applying topological overlap to an overall similarity
 score (e.g.
 Pearson, Euclidean, biweight midcorrelation) after standard batch correction
 (Surrogate Variable Analysis
\begin_inset CommandInset citation
LatexCommand cite
key "leek2007capturing"

\end_inset

).
 The similarity matrix typically does not consider sample covariates and
 consequently yields a collection of modules which are generally coexpressed,
 not necessarily differentially coexpressed.
 To identify which modules might be relevant to phenotypes of interest,
 an eigendecomposition by samples of each module is performed and the top
 eigenvector (eigengene) is regressed against the phenotypes and other covariate
s.
 This approach, while effective at identifying associated modules has limitation
s.
 The eigengene obtained through this method will capture the greatest axis
 of variation across the samples, not the greatest axis of covariation.
 By design, the eigengene will only be associated with a phenotype of interest
 if there is differential expression within the module across phenotypes.
 Given the wide availability of methods for differential expression analysis,
 the greatest value coming from the investigation of coexpression necessarily
 focuses on discovery of genes and modules which are not differentially
 expressed.
 In any scenario where we wish to consider differential coexpression as
 a potential driver of disease needs to consider these concepts.
\end_layout

\begin_layout Standard
We applied [NAME] to the COPDGene data and included Sex as a covariate in
 the model.
 
\end_layout

\begin_layout Standard
The sex distribution for cases and controls in this study were uneven, potential
ly leading to confounded results.
 Using Equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:parameter_interpretation"

\end_inset

 we generated 
\begin_inset Formula $p\times p$
\end_inset

 matrix interpreted as the differential correlation for the case-control
 partition, holding sex constant.
 We applied a soft thresholding power of 6 and computed the topological
 overlap matrix, as described in 
\begin_inset CommandInset citation
LatexCommand cite
key "wgcna1"

\end_inset

.
 Modules generated were analyzed for functional enrichment using DAVID
\begin_inset CommandInset citation
LatexCommand cite
key "huang2009bioinformatics,huang2009systematic"

\end_inset

.
 
\end_layout

\begin_layout Standard
[Edit this after new results come in] The top module was found to be enriched
 for mitochondrial translational elongation 
\begin_inset Formula $\left(\text{adjusted }p=7\times10^{-7}\right)$
\end_inset

.
 Recent work has identified several mitochondrial mechanisms for disease
 progression
\begin_inset CommandInset citation
LatexCommand cite
key "cloonan2016mitochondrial,cloonan2016mitochondria"

\end_inset

.
\end_layout

\begin_layout Section*
Discussion
\end_layout

\begin_layout Standard
This manuscript makes two important contributions to gene correlation networks.
 First, we identify the problem of confounding by differential coexpression,
 provide a theoretical basis for that artifact and demonstrate its presence
 in real data.
 Second, we propose a method for estimating coexpression matrices in the
 context of covariates which serve as coexpression confounders.
 
\end_layout

\begin_layout Standard
Incremental improvements in high-throughput data collection have vastly
 increased the availability of large scale gene expression data.
 As we dive deeper into this data, we recognize that cellular states are
 rarely driven by the additive impacts of sets of suspect genes.
 Rather, it is the relationships, pairwise and higher, that these genes
 have with each other and their environment that leads to the phenotypes
 we seek to explain.
 Technological and methodological advancements in genomics allow us unprecedente
d ability to study these interactions.
 But with this new data come new statistical challenges that were not as
 impactful in differential expression analyses.
 
\end_layout

\begin_layout Standard
We argue that the batch correction methods that are designed for and are
 ubiquitous in differential expression are important, but not sufficient,
 for removing unwanted variation from the data in gene coexpression.
\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "coexpression_batch"
options "bibtotoc,apalike"

\end_inset


\end_layout

\end_body
\end_document
